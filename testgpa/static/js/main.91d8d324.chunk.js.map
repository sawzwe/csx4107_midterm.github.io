{"version":3,"sources":["components/CourseCard.js","App.js","serviceWorker.js","index.js"],"names":["Option","Select","CourseCard","props","visible","react_default","a","createElement","card","style","marginTop","type","title","concat","realIndex","extra","es_button","onClick","deleteCourse","index","icon","es_select","width","placeholder","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","onChange","value","updateCourseCode","className","updateCourseGPA","updateCourseCredits","Header","Layout","Footer","App","state","courses","GPA","credits","code","targetIndex","newGPA","_this","setState","prevState","prevCourses","newCredits","newCode","addCourse","Object","toConsumableArray","newCourses","calculateGPA","totalCredits","earnedCredits","map","course","toFixed","_this2","this","currentIndex","components_CourseCard","key","currentGPA","String","layout","minHeight","window","innerHeight","opacity","size","textAlign","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6TAGMA,EAASC,IAAOD,OAqGPE,EAnGI,SAAAC,GACjB,IAAKA,EAAMC,QACT,OAAO,KAmBT,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAO,CAAEC,UAAW,IACpBC,KAAK,QACLC,MAAK,WAAAC,OAAaV,EAAMW,WACxBC,MAAOV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAQC,QAAS,kBAAMd,EAAMe,aAAaf,EAAMgB,QAAQR,KAAK,SAASS,KAAK,YAGlFf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACEZ,MAAO,CAAEa,MAAO,KAChBC,YAAY,OACZC,iBAAiB,WACjBC,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOxB,MAAMyB,SAASC,cAAcC,QAAQJ,EAAMG,gBAAkB,GACrGE,SArBmB,SAACC,GACxB7B,EAAM8B,iBAAiB9B,EAAMgB,MAAOa,KAsBhC3B,EAAAC,EAAAC,cAACP,EAAD,CAAQgC,MAAO,GAAf,gCACA3B,EAAAC,EAAAC,cAACP,EAAD,CAAQgC,MAAO,GAAf,WACA3B,EAAAC,EAAAC,cAACP,EAAD,CAAQgC,MAAO,GAAf,WACA3B,EAAAC,EAAAC,cAACP,EAAD,CAAQgC,MAAO,GAAf,YAKF3B,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACEZ,MAAO,CAAEa,MAAO,IAChBC,YAAY,QACZC,iBAAiB,WACjBC,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOxB,MAAMyB,SAASC,cAAcC,QAAQJ,EAAMG,gBAAkB,GACrGK,UAAU,eACVH,SA7CkB,SAACC,GACvB7B,EAAMgC,gBAAgBhC,EAAMgB,MAAOa,KA8C/B3B,EAAAC,EAAAC,cAACP,EAAD,CAAQgC,MAAO,GAAf,KACA3B,EAAAC,EAAAC,cAACP,EAAD,CAAQgC,MAAO,MAAf,MACA3B,EAAAC,EAAAC,cAACP,EAAD,CAAQgC,MAAO,MAAf,MACA3B,EAAAC,EAAAC,cAACP,EAAD,CAAQgC,MAAO,GAAf,KACA3B,EAAAC,EAAAC,cAACP,EAAD,CAAQgC,MAAO,MAAf,MACA3B,EAAAC,EAAAC,cAACP,EAAD,CAAQgC,MAAO,MAAf,MACA3B,EAAAC,EAAAC,cAACP,EAAD,CAAQgC,MAAO,GAAf,KACA3B,EAAAC,EAAAC,cAACP,EAAD,CAAQgC,MAAO,MAAf,MACA3B,EAAAC,EAAAC,cAACP,EAAD,CAAQgC,MAAO,GAAf,KACA3B,EAAAC,EAAAC,cAACP,EAAD,CAAQgC,MAAO,GAAf,KACA3B,EAAAC,EAAAC,cAACP,EAAD,CAAQgC,MAAO,MAAf,iBAIF3B,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACEZ,MAAO,CAAEa,MAAO,IAChBC,YAAY,UACZC,iBAAiB,WACjBC,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOxB,MAAMyB,SAASC,cAAcC,QAAQJ,EAAMG,gBAAkB,GACrGK,UAAU,eACVH,SA/DsB,SAACC,GAC3B7B,EAAMiC,oBAAoBjC,EAAMgB,MAAOa,KAgEnC3B,EAAAC,EAAAC,cAACP,EAAD,CAAQgC,MAAO,GAAf,KACA3B,EAAAC,EAAAC,cAACP,EAAD,CAAQgC,MAAO,GAAf,KACA3B,EAAAC,EAAAC,cAACP,EAAD,CAAQgC,MAAO,GAAf,KACA3B,EAAAC,EAAAC,cAACP,EAAD,CAAQgC,MAAO,GAAf,MAIF3B,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACEZ,MAAO,CAAEa,MAAO,KAChBC,YAAY,SACZC,iBAAiB,WACjBC,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOxB,MAAMyB,SAASC,cAAcC,QAAQJ,EAAMG,gBAAkB,GACrGK,UAAU,eACVH,SAvEqB,SAACC,GAC1B7B,EAAM8B,iBAAiB9B,EAAMgB,MAAOa,KAwEhC3B,EAAAC,EAAAC,cAACP,EAAD,CAAQgC,MAAO,GAAf,WACA3B,EAAAC,EAAAC,cAACP,EAAD,CAAQgC,MAAO,GAAf,WACA3B,EAAAC,EAAAC,cAACP,EAAD,CAAQgC,MAAO,GAAf,WACA3B,EAAAC,EAAAC,cAACP,EAAD,CAAQgC,MAAO,GAAf,uBC3FAK,EAAmBC,IAAnBD,OAAQE,EAAWD,IAAXC,OA6HDC,6MA1HbC,MAAQ,CACNC,QAAS,CACP,CACEC,IAAK,EACLC,QAAS,EACTC,KAAM,OACNzC,SAAS,OAKf+B,gBAAkB,SAACW,EAAaC,GAC9BC,EAAKC,SAAS,SAAAC,GACZ,IAAMC,EAAcD,EAAUR,QAE9B,OADAS,EAAYL,GAAaH,IAAMI,EACxB,CACLL,QAASS,QAKff,oBAAsB,SAACU,EAAaM,GAClCJ,EAAKC,SAAS,SAAAC,GACZ,IAAMC,EAAcD,EAAUR,QAE9B,OADAS,EAAYL,GAAaF,QAAUQ,EAC5B,CACLV,QAASS,QAKflB,iBAAmB,SAACa,EAAaO,GAC/BL,EAAKC,SAAS,SAAAC,GACZ,IAAMC,EAAcD,EAAUR,QAE9B,OADAS,EAAYL,GAAaD,KAAOQ,EACzB,CACLX,QAASS,QAKfG,UAAY,WACVN,EAAKC,SAAS,SAAAC,GACZ,MAAO,CACLR,QAAQa,OAAAC,EAAA,EAAAD,CAAKL,EAAUR,SAAhB7B,OAAA,CAAyB,CAC9B8B,IAAK,EACLC,QAAS,EACTC,KAAK,OACLzC,SAAS,WAMjBc,aAAe,SAAC4B,GACd,IAAMW,EAAUF,OAAAC,EAAA,EAAAD,CAAOP,EAAKP,MAAMC,SAClCe,EAAWX,GAAa1C,SAAU,EAClC4C,EAAKC,SAAS,CACZP,QAASe,OAIbC,aAAe,WACb,IAAIC,EAAe,EAAGC,EAAgB,EAQtC,OAPAZ,EAAKP,MAAMC,QAAQmB,IAAI,SAAAC,GAKrB,OAJIA,EAAO1D,UACTuD,GAAgBG,EAAOlB,QACvBgB,GAAiBE,EAAOnB,IAAM,EAAMmB,EAAOlB,SAEtC,OAEY,IAAjBe,EACK,OAEDC,EAAgBD,EAAe,GAAKI,QAAQ,4EAG7C,IAAAC,EAAAC,KACHnD,EAAY,EAEV4B,EAAUuB,KAAKxB,MAAMC,QAAQmB,IAAI,SAACC,EAAQI,GAG9C,OAFApD,GAAagD,EAAO1D,QAGlBC,EAAAC,EAAAC,cAAC4D,EAAD,CACE/D,QAAS0D,EAAO1D,QAChBU,UAAWA,EACXK,MAAO+C,EACP/B,gBAAiB6B,EAAK7B,gBACtBC,oBAAqB4B,EAAK5B,oBAC1BH,iBAAkB+B,EAAK/B,iBACvBf,aAAc8C,EAAK9C,aACnBkD,IAAKF,MAKLG,EAAa,UAAYC,OAAOL,KAAKP,gBAE3C,OACErD,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAQrC,UAAU,UAChB7B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,YAAYzB,MAAO,CAAE+D,UAAWC,OAAOC,cACpDrE,EAAAC,EAAAC,cAAC8B,EAAD,CAAQ5B,MAAO,CAAEkE,QAAS,KACxBtE,EAAAC,EAAAC,cAAA,MAAI2B,UAAU,QAAd,oBAEF7B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,cACZQ,EACDrC,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,gBACb7B,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAQC,QAASgD,KAAKX,UAAWsB,KAAK,QAAQjE,KAAK,UAAUuB,UAAU,aAAvE,gBACA7B,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAQ4D,KAAK,QAAQjE,KAAK,SAASuB,UAAU,gBAAgBmC,KAGjEhE,EAAAC,EAAAC,cAACgC,EAAD,CAAQ9B,MAAO,CACboE,UAAW,qBAlHLC,aCIEC,QACW,cAA7BN,OAAOO,SAASC,UAEe,UAA7BR,OAAOO,SAASC,UAEhBR,OAAOO,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/E,EAAAC,EAAAC,cAAC8E,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.91d8d324.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Card, Select } from 'antd';\n\nconst Option = Select.Option;\n\nconst CourseCard = props => {\n  if (!props.visible) {\n    return null;\n  }\n\n  const handleGPAChange = (value) => {\n    props.updateCourseGPA(props.index, value);\n  };\n\n  const handleCreditsChange = (value) => {\n    props.updateCourseCredits(props.index, value);\n  };\n\n  const handleCodeChange = (value) => {\n    props.updateCourseCode(props.index, value);\n  };  \n  const handleCourseChange = (value) => {\n    props.updateCourseCode(props.index, value);\n  };  \n\n\n  return (\n    <Card\n      style={{ marginTop: 18 }}\n      type=\"inner\"\n      title={`Subject ${props.realIndex}`}\n      extra={<Button onClick={() => props.deleteCourse(props.index)} type=\"danger\" icon=\"delete\"></Button>}\n    >\n      \n      <Select\n        style={{ width: 200 }}\n        placeholder=\"Code\"\n        optionFilterProp=\"children\"\n        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n        onChange={handleCodeChange}\n      >\n        <Option value={0}>CSX1001 Computer Programming</Option>\n        <Option value={1}>CSX2001</Option>\n        <Option value={2}>ITX3002</Option>\n        <Option value={3}>GEX4001</Option>\n\n       \n      </Select>\n\n      <Select\n        style={{ width: 80 }}\n        placeholder=\"Grade\"\n        optionFilterProp=\"children\"\n        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n        className=\"inputCredits\"\n        onChange={handleGPAChange}\n      >\n        <Option value={4.0}>A</Option>\n        <Option value={3.75}>A-</Option>\n        <Option value={3.25}>B+</Option>\n        <Option value={3.0}>B</Option>\n        <Option value={2.75}>B-</Option>\n        <Option value={2.25}>C+</Option>\n        <Option value={2.0}>C</Option>\n        <Option value={1.75}>C-</Option>\n        <Option value={1.0}>D</Option>\n        <Option value={0.00}>F</Option>\n        <Option value={null}>W,I,S,U,R,TR</Option>\n\n      </Select>\n\n      <Select\n        style={{ width: 80 }}\n        placeholder=\"Credits\"\n        optionFilterProp=\"children\"\n        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n        className=\"inputCredits\"\n        onChange={handleCreditsChange}\n      >\n        <Option value={0}>0</Option>\n        <Option value={1}>1</Option>\n        <Option value={2}>2</Option>\n        <Option value={3}>3</Option>\n\n      </Select>\n\n      <Select\n        style={{ width: 100 }}\n        placeholder=\"Course\"\n        optionFilterProp=\"children\"\n        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n        className=\"inputCredits\"\n        onChange={handleCourseChange}\n      >\n        <Option value={0}>CSX1001</Option>\n        <Option value={1}>CSX2001</Option>\n        <Option value={2}>ITX3002</Option>\n        <Option value={3}>GEX4001</Option>\n\n      </Select>\n    </Card>\n  );\n}\n\nexport default CourseCard;","import React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport CourseCard from './components/CourseCard';\nimport { Layout, Button } from 'antd';\n\nconst { Header, Footer } = Layout;\n\nclass App extends Component {\n  state = {\n    courses: [\n      {\n        GPA: 0.0,\n        credits: 0,\n        code: 'code',\n        visible: true\n      }\n    ]\n  };\n\n  updateCourseGPA = (targetIndex, newGPA) => {\n    this.setState(prevState => {\n      const prevCourses = prevState.courses;\n      prevCourses[targetIndex].GPA = newGPA;\n      return {\n        courses: prevCourses\n      };\n    })\n  }\n\n  updateCourseCredits = (targetIndex, newCredits) => {\n    this.setState(prevState => {\n      const prevCourses = prevState.courses;\n      prevCourses[targetIndex].credits = newCredits;\n      return {\n        courses: prevCourses\n      };\n    })\n  }\n\n  updateCourseCode = (targetIndex, newCode) => {\n    this.setState(prevState => {\n      const prevCourses = prevState.courses;\n      prevCourses[targetIndex].code = newCode;\n      return {\n        courses: prevCourses\n      };\n    })\n  }\n\n  addCourse = () => {\n    this.setState(prevState => {\n      return {\n        courses: [...prevState.courses, {\n          GPA: 0.0,\n          credits: 0,\n          code:'code',\n          visible: true\n        }]\n      }\n    })\n  }\n\n  deleteCourse = (targetIndex) => {\n    const newCourses = [...this.state.courses];\n    newCourses[targetIndex].visible = false;\n    this.setState({\n      courses: newCourses\n    });\n  }\n\n  calculateGPA = () => {\n    let totalCredits = 0, earnedCredits = 0.0;\n    this.state.courses.map(course => {\n      if (course.visible) {\n        totalCredits += course.credits;\n        earnedCredits += course.GPA / 4.0 * course.credits;\n      }\n      return null;\n    })\n    if (totalCredits === 0.0) {\n      return 'TBA';\n    }\n    return (earnedCredits / totalCredits * 4.0).toFixed(2);\n  }\n\n  render() {\n    let realIndex = 0;\n\n    const courses = this.state.courses.map((course, currentIndex) => {\n      realIndex += course.visible;\n\n      return (\n        <CourseCard\n          visible={course.visible}\n          realIndex={realIndex}\n          index={currentIndex}\n          updateCourseGPA={this.updateCourseGPA}\n          updateCourseCredits={this.updateCourseCredits}\n          updateCourseCode={this.updateCourseCode}\n          deleteCourse={this.deleteCourse}\n          key={currentIndex}\n        />\n      );\n    });\n\n    const currentGPA = 'GPA is ' + String(this.calculateGPA());\n\n    return (\n      <Layout className=\"layout\">\n        <div className=\"container\" style={{ minHeight: window.innerHeight }}>\n          <Header style={{ opacity: 0.8 }}>\n            <h1 className=\"logo\">CGPA Calculator</h1>\n          </Header>\n          <div className=\"selectBody\">\n            {courses}\n            <div className=\"addContainer\">\n              <Button onClick={this.addCourse} size=\"large\" type=\"primary\" className=\"addCourse\">Add a course</Button>\n              <Button size=\"large\" type=\"dashed\" className=\"resultantGPA\">{currentGPA}</Button>\n            </div>\n          </div>\n          <Footer style={{\n            textAlign: 'center',\n          }}>\n          </Footer>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}